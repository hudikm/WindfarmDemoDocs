---
swagger: "2.0"
info:
  title: "WindFarmDemo microservices"
basePath: "/api"
tags:
- name: "OAuth2 and Login"
- name: "Person resource"
schemes:
- "http"
- "https"
paths:
  /login/public-key:
    get:
      tags:
      - "OAuth2 and Login"
      summary: "Request to obtain public key"
      description: "An obtained public key can by used to verify JWT token"
      operationId: "getPublicKey"
      produces:
      - "application/json"
      parameters: []
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/PublicKey"
  /login:
    get:
      tags:
      - "OAuth2 and Login"
      summary: "Display Login page"
      description: ""
      operationId: "showLoginPage"
      produces:
      - "text/html"
      parameters:
      - name: "client_id"
        in: "query"
        description: "The id of the application that asks for authorization"
        required: true
        type: "string"
      - name: "scope"
        in: "query"
        description: "A space-delimited list of permissions that the application requires."
        required: true
        type: "string"
      - name: "state"
        in: "query"
        description: "The primary reason for using the state parameter is to mitigate\
          \ CSRF attacks. An opaque value, used for security purposes. If this request\
          \ parameter is set in the request, then it is returned to the application\
          \ as part of the redirect_uri."
        required: true
        type: "string"
      - name: "redirect_uri"
        in: "query"
        description: "Holds a URL. A successful response from this endpoint results\
          \ in a redirect to this URL."
        required: true
        type: "string"
      - name: "response_type"
        in: "query"
        description: "Informs the Authorization Server of the desired authorization\
          \ processing flow"
        required: true
        type: "string"
        enum:
        - "code"
        - "token"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/LoginPageView"
  /login/code:
    post:
      tags:
      - "OAuth2 and Login"
      summary: "Request to obtain code"
      description: ""
      operationId: "getAccessCode"
      consumes:
      - "application/x-www-form-urlencoded"
      produces:
      - "application/x-www-form-urlencoded"
      parameters:
      - name: "username"
        in: "formData"
        required: true
        type: "string"
      - name: "password"
        in: "formData"
        required: true
        type: "string"
      - name: "sessionId"
        in: "formData"
        required: true
        type: "string"
      - name: "action"
        in: "formData"
        required: true
        type: "object"
      - name: "stay_signin"
        in: "formData"
        required: true
        type: "boolean"
      responses:
        default:
          description: "successful operation"
  /login/implicit:
    post:
      tags:
      - "OAuth2 and Login"
      summary: "Request to obtain access token. Implicit flow"
      description: ""
      operationId: "implicitFlowAuth"
      consumes:
      - "application/x-www-form-urlencoded"
      produces:
      - "application/json"
      parameters:
      - name: "username"
        in: "formData"
        required: true
        type: "string"
      - name: "password"
        in: "formData"
        required: true
        type: "string"
      - name: "sessionId"
        in: "formData"
        required: true
        type: "string"
      - name: "action"
        in: "formData"
        required: true
        type: "object"
      - name: "stay_signin"
        in: "formData"
        required: true
        type: "boolean"
      responses:
        default:
          description: "successful operation"
  /login/token:
    post:
      tags:
      - "OAuth2 and Login"
      summary: "Request to obtain access token from code. Authorization Code"
      description: ""
      operationId: "getAccessToken"
      consumes:
      - "application/x-www-form-urlencoded"
      produces:
      - "application/json"
      parameters:
      - name: "code"
        in: "formData"
        required: true
        type: "string"
      - name: "grant_type"
        in: "formData"
        required: true
        type: "string"
      - name: "client_secret"
        in: "formData"
        required: true
        type: "string"
      - name: "redirect_uri"
        in: "formData"
        required: true
        type: "string"
      - name: "state"
        in: "formData"
        required: true
        type: "string"
      - name: "client_id"
        in: "formData"
        required: true
        type: "string"
      responses:
        default:
          description: "successful operation"
  /persons/password:
    post:
      tags:
      - "Person resource"
      summary: "Set new password"
      description: ""
      operationId: "setNewPassword"
      consumes:
      - "application/x-www-form-urlencoded"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "query"
        required: false
        type: "integer"
        format: "int64"
      - name: "password"
        in: "formData"
        required: false
        type: "string"
      - name: "Authorization"
        in: "header"
        description: "Bearer token"
        required: false
        type: "string"
      responses:
        default:
          description: "successful operation"
      security:
      - oauth2:
        - "ADMIN"
  /persons:
    get:
      tags:
      - "Person resource"
      summary: "Obtain list of users"
      description: ""
      operationId: "getListOfPersons"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "limit"
        in: "query"
        required: false
        type: "integer"
        format: "int32"
      - name: "page"
        in: "query"
        required: false
        type: "integer"
        format: "int32"
      - name: "Authorization"
        in: "header"
        description: "Bearer token"
        required: false
        type: "string"
      responses:
        200:
          description: "successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Person"
      security:
      - oauth2:
        - "ADMIN"
    post:
      tags:
      - "Person resource"
      summary: "Save or update person"
      description: ""
      operationId: "setPersonInfo"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        required: false
        schema:
          $ref: "#/definitions/Person"
      - name: "Authorization"
        in: "header"
        description: "Bearer token"
        required: false
        type: "string"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/Person"
      security:
      - oauth2:
        - "ADMIN"
        - "USER_READ_ONLY"
    delete:
      tags:
      - "Person resource"
      summary: "Delete person"
      description: ""
      operationId: "deletePerson"
      parameters:
      - name: "id"
        in: "query"
        required: false
        type: "integer"
        format: "int64"
      - name: "Authorization"
        in: "header"
        description: "Bearer token"
        required: false
        type: "string"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/Person"
      security:
      - oauth2:
        - "ADMIN"
  /persons/{id}:
    get:
      tags:
      - "Person resource"
      summary: "Find person by ID"
      description: ""
      operationId: "getPersonInfo"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        required: true
        type: "integer"
        format: "int64"
      - name: "Authorization"
        in: "header"
        description: "Bearer token"
        required: false
        type: "string"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/Person"
      security:
      - oauth2:
        - "ADMIN"
        - "USER_READ_ONLY"
securityDefinitions:
  oauth2:
    description: "oauth2"
    type: "oauth2"
    authorizationUrl: "http://localhost:8085/api/login"
    tokenUrl: "http://localhost:8085/api/login/token"
    flow: "accessCode"
    scopes:
      ADMIN: "Access to all resources"
      USER_READ_ONLY: "Limited access"
definitions:
  PublicKey:
    type: "object"
    properties:
      pubKey:
        type: "string"
      keyFormat:
        type: "string"
      keyAlg:
        type: "string"
  LoginPageView:
    type: "object"
    properties:
      rootPath:
        type: "string"
      sessionId:
        type: "string"
      action:
        type: "string"
  Person:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      userName:
        type: "string"
      roles:
        type: "array"
        uniqueItems: true
        items:
          type: "string"
      email:
        type: "string"
      phoneNumbers:
        type: "array"
        uniqueItems: true
        items:
          $ref: "#/definitions/Phone"
      firstName:
        type: "string"
      lastName:
        type: "string"
  Phone:
    type: "object"
    properties:
      owner:
        $ref: "#/definitions/Person"
      number:
        type: "string"
      id:
        type: "integer"
        format: "int64"
