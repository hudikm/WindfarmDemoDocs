{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"\u00davod \u00b6 Windfarmdemo je aplik\u00e1cia postaven\u00e1 na frameworku dropwizard , ktor\u00fd je poskladan\u00fd z nasleduj\u00facich kni\u017en\u00edc: Jetty HTTP web server. Jersey RESTov\u00e9 rozhranie. Jackson JSON serializovanie a deserializovanie. Logback logovanie. Hibernate Validator validovanie d\u00e1t'. Metrics na to, aby sme zistili \u201e\u010do rob\u00ed va\u0161a aplik\u00e1cia\u201c JDBI a Hibernate datab\u00e1za Liquibase migr\u00e1cia. FreeMarker a mustache generovanie webov\u00fdch str\u00e1nok Uk\u00e1\u017ekov\u00e1 aplik\u00e1cia \u00b6 T\u00e1to apluk\u00e1cia demo\u0161truje pou\u017eitie nasladuj\u00facich kni\u017en\u00edc a \u010dast\u00ed dropwizardu: REST rozhranie vytvoren\u00e9 za pomoci Jersey resp. JAX-RS API. Implementovan\u00e9 v prie\u010dinku Resources Vyu\u017eitie datab\u00e1zy za pomoci Hibernate frameworku PersonDao ilustruje pou\u017eitie DAO(data access objekt) objektu pristupuj\u00faceho k d\u00e1tam s pou\u017eit\u00edm hibernate. Na pr\u00edstup k d\u00e1tam sa pou\u017e\u00edva ako jazyk HQL tak aj pr\u00edstup pomocou JPA Criteria API Person ilustruje mapovanie Java objektov na tabu\u013eky v datab\u00e1ze pou\u017eit\u00edm JPA anot\u00e1ci\u00ed. Aplik\u00e1cia obsahuje implement\u00e1ciu autoriza\u010dn\u00e9ho OAuth2 servisu, ktor\u00fd implementuje dva z\u00e1kladn\u00e9 toky implicit, code . Tento servis sa d\u00e1 pou\u017ei\u0165 na generovanie JWT pr\u00edstupov\u00fdch tokenov. Jednotliv\u00e9 REST zdroje s\u00fa zabezpe\u010den\u00e9 pomocou OAuth2 pr\u00edstupov\u00e9ho t\u00f3kenu. Po\u017eiadavky na spojenie s DB \u00b6 Aplik\u00e1cia na spustenie vy\u017eaduje existuj\u00facu datab\u00e1zu MariaDB s nasleduj\u00facimi parametrami: URL: localhost:3306 Typ datab\u00e1zy: MariaDB N\u00e1zov vyvorenej datab\u00e1zy: windfarmdemoDB U\u017e\u00edvatel: windfarmdemo Heslo: G1PpyytVE8Zy8kHE \u0160tandardn\u00e9 nastavenie m\u00f4\u017eete zmeni\u0165 v s\u00fabore: config.yml In\u0161tal\u00e1cia MariaDB Na in\u0161talovanie datab\u00e1zy odpor\u00fa\u010dam pou\u017ei\u0165 bal\u00edk XAMPP, ktor\u00fd obsahuje Apache + MariaDB + PHP + Perl. Datab\u00e1zu mo\u017ee konfigurova\u0165 pomocou PHPmyadmin prostredia. XAMPP Odkazy \u00b6 REST klient a JSON Retrofit : Typovo bezpe\u010dn\u00fd HTTP klient pre Android a Java jsonschema2pojo : Gener\u00e1tor POJO objektov pre Java jazyku s JSON alebo JSON-Schema reqres.in : Testovacie REST API https://jsonplaceholder.typicode.com/ Dropwizzard: Docs Jax-RX api OAuth2.0: OAUTH/OPENID Predn\u00e1\u0161ka Implicit flow Code flow Bezpe\u010dnos\u0165 Custum Authenticaion HTTPS Hibernate: Hibernate r\u00f4zne n\u00e1vody Metamodel generator Getting started Dokument\u00e1cia Freemarker: Dokument\u00e1cia Css \u0161abl\u00f3na: Materializecss Javascript: - Jquery kni\u017enica - Grafy Swagger - gener\u00e1tor api dokument\u00e1cie: Java anot\u00e1cie Swagger","title":"\u00davod"},{"location":"#uvod","text":"Windfarmdemo je aplik\u00e1cia postaven\u00e1 na frameworku dropwizard , ktor\u00fd je poskladan\u00fd z nasleduj\u00facich kni\u017en\u00edc: Jetty HTTP web server. Jersey RESTov\u00e9 rozhranie. Jackson JSON serializovanie a deserializovanie. Logback logovanie. Hibernate Validator validovanie d\u00e1t'. Metrics na to, aby sme zistili \u201e\u010do rob\u00ed va\u0161a aplik\u00e1cia\u201c JDBI a Hibernate datab\u00e1za Liquibase migr\u00e1cia. FreeMarker a mustache generovanie webov\u00fdch str\u00e1nok","title":"\u00davod"},{"location":"#ukazkova-aplikacia","text":"T\u00e1to apluk\u00e1cia demo\u0161truje pou\u017eitie nasladuj\u00facich kni\u017en\u00edc a \u010dast\u00ed dropwizardu: REST rozhranie vytvoren\u00e9 za pomoci Jersey resp. JAX-RS API. Implementovan\u00e9 v prie\u010dinku Resources Vyu\u017eitie datab\u00e1zy za pomoci Hibernate frameworku PersonDao ilustruje pou\u017eitie DAO(data access objekt) objektu pristupuj\u00faceho k d\u00e1tam s pou\u017eit\u00edm hibernate. Na pr\u00edstup k d\u00e1tam sa pou\u017e\u00edva ako jazyk HQL tak aj pr\u00edstup pomocou JPA Criteria API Person ilustruje mapovanie Java objektov na tabu\u013eky v datab\u00e1ze pou\u017eit\u00edm JPA anot\u00e1ci\u00ed. Aplik\u00e1cia obsahuje implement\u00e1ciu autoriza\u010dn\u00e9ho OAuth2 servisu, ktor\u00fd implementuje dva z\u00e1kladn\u00e9 toky implicit, code . Tento servis sa d\u00e1 pou\u017ei\u0165 na generovanie JWT pr\u00edstupov\u00fdch tokenov. Jednotliv\u00e9 REST zdroje s\u00fa zabezpe\u010den\u00e9 pomocou OAuth2 pr\u00edstupov\u00e9ho t\u00f3kenu.","title":"Uk\u00e1\u017ekov\u00e1 aplik\u00e1cia"},{"location":"#poziadavky-na-spojenie-s-db","text":"Aplik\u00e1cia na spustenie vy\u017eaduje existuj\u00facu datab\u00e1zu MariaDB s nasleduj\u00facimi parametrami: URL: localhost:3306 Typ datab\u00e1zy: MariaDB N\u00e1zov vyvorenej datab\u00e1zy: windfarmdemoDB U\u017e\u00edvatel: windfarmdemo Heslo: G1PpyytVE8Zy8kHE \u0160tandardn\u00e9 nastavenie m\u00f4\u017eete zmeni\u0165 v s\u00fabore: config.yml In\u0161tal\u00e1cia MariaDB Na in\u0161talovanie datab\u00e1zy odpor\u00fa\u010dam pou\u017ei\u0165 bal\u00edk XAMPP, ktor\u00fd obsahuje Apache + MariaDB + PHP + Perl. Datab\u00e1zu mo\u017ee konfigurova\u0165 pomocou PHPmyadmin prostredia. XAMPP","title":"Po\u017eiadavky na spojenie s DB"},{"location":"#odkazy","text":"REST klient a JSON Retrofit : Typovo bezpe\u010dn\u00fd HTTP klient pre Android a Java jsonschema2pojo : Gener\u00e1tor POJO objektov pre Java jazyku s JSON alebo JSON-Schema reqres.in : Testovacie REST API https://jsonplaceholder.typicode.com/ Dropwizzard: Docs Jax-RX api OAuth2.0: OAUTH/OPENID Predn\u00e1\u0161ka Implicit flow Code flow Bezpe\u010dnos\u0165 Custum Authenticaion HTTPS Hibernate: Hibernate r\u00f4zne n\u00e1vody Metamodel generator Getting started Dokument\u00e1cia Freemarker: Dokument\u00e1cia Css \u0161abl\u00f3na: Materializecss Javascript: - Jquery kni\u017enica - Grafy Swagger - gener\u00e1tor api dokument\u00e1cie: Java anot\u00e1cie Swagger","title":"Odkazy"},{"location":"import_postup/","text":"Importovanie projektu \u00b6 Naklonovanie projektu z GIT repozit\u00e1ra. File--> New--> Projetc from Version Control--> Git Url: https://github.com/hudikm/WindFarmDemo.git Po naklonovan\u00ed povolte automaticke importovanie kni\u017en\u00edc Skompilujte projekt (Build) Chyba kompil\u00e1cie V pr\u00edpade, \u017ee kompil\u00e1cia neprebehne spr\u00e1vne spustite manu\u00e1lne import kni\u017en\u00edc. pom.xml--> Maven--> Reimport Spustenie alik\u00e1cie Spustite aplik\u00e1ciu cez pr\u00edkazov\u00fd riadok java -jar target/WindFarmDemo-1.0-SNAPSHOT.jar server config.yml alebo nakonfigurujte prostredie: Aplik\u00e1cia je spusten\u00e1 na adrese: http://localhost:8080 In\u0161tal\u00e1cia MariaDB Na in\u0161talovanie datab\u00e1zy odpor\u00fa\u010dam pou\u017ei\u0165 bal\u00edk XAMPP, ktor\u00fd obsahuje Apache + MariaDB + PHP + Perl. Datab\u00e1zu mo\u017ee konfigurova\u0165 pomocou PHPmyadmin prostredia. XAMPP Pr\u00edhlasenie sa do aplik\u00e1cie: \u00b6 Na prihl\u00e1seni do aplik\u00e1cie mo\u017eete pou\u017ei\u0165 dva \u0161tandardne vytvoren\u00e9 \u00fa\u010dty: user@gmail.com (readonly) admin@gmail.com (admin) Heslo: heslo Tieto u\u017eivatelsk\u00e9 \u00fa\u010dty s\u00fa zadefinovan\u00e9 v triede: UsersDao","title":"Import projektu"},{"location":"import_postup/#importovanie-projektu","text":"Naklonovanie projektu z GIT repozit\u00e1ra. File--> New--> Projetc from Version Control--> Git Url: https://github.com/hudikm/WindFarmDemo.git Po naklonovan\u00ed povolte automaticke importovanie kni\u017en\u00edc Skompilujte projekt (Build) Chyba kompil\u00e1cie V pr\u00edpade, \u017ee kompil\u00e1cia neprebehne spr\u00e1vne spustite manu\u00e1lne import kni\u017en\u00edc. pom.xml--> Maven--> Reimport Spustenie alik\u00e1cie Spustite aplik\u00e1ciu cez pr\u00edkazov\u00fd riadok java -jar target/WindFarmDemo-1.0-SNAPSHOT.jar server config.yml alebo nakonfigurujte prostredie: Aplik\u00e1cia je spusten\u00e1 na adrese: http://localhost:8080 In\u0161tal\u00e1cia MariaDB Na in\u0161talovanie datab\u00e1zy odpor\u00fa\u010dam pou\u017ei\u0165 bal\u00edk XAMPP, ktor\u00fd obsahuje Apache + MariaDB + PHP + Perl. Datab\u00e1zu mo\u017ee konfigurova\u0165 pomocou PHPmyadmin prostredia. XAMPP","title":"Importovanie projektu"},{"location":"import_postup/#prihlasenie-sa-do-aplikacie","text":"Na prihl\u00e1seni do aplik\u00e1cie mo\u017eete pou\u017ei\u0165 dva \u0161tandardne vytvoren\u00e9 \u00fa\u010dty: user@gmail.com (readonly) admin@gmail.com (admin) Heslo: heslo Tieto u\u017eivatelsk\u00e9 \u00fa\u010dty s\u00fa zadefinovan\u00e9 v triede: UsersDao","title":"Pr\u00edhlasenie sa do aplik\u00e1cie:"},{"location":"page_layout/","text":"PageLayout \u00b6 Str\u00e1nky s\u00fa vytv\u00e1ran\u00e9 pomocou abstraktnej triedy MaterializePage, ktor\u00e1 m\u00e1 za \u00falohu vyvori\u0165 html skelet, ktor\u00fd je definovan\u00fd v \u0161abl\u00f3ne materialize_page.ftl . HTML skelet na\u010d\u00edtava potrebn\u00e9 css a js kni\u017enice a je tvoren\u00fd troma \u010das\u0165ami: hlavi\u010dka / Header hlavn\u00fd obsah / Body p\u00e4ta / Footer V demo aplik\u00e1cii je hlavi\u010dka tvoren\u00e1 java triedou MaterializeHeader , ktor\u00e1 vytv\u00e1ra \u0161abl\u00f3nu materialize_header.ftl . V hlavi\u010dke je aj definovan\u00e9 bo\u010dn\u00e9 menu, ktor\u00e9ho jednotliv\u00e9 polo\u017eky s\u00fa definovan\u00e9 v \u0161abl\u00f3ne menu_items.ftl . \u0160trukt\u00fara jedn\u00e9ho odkazu je nasledovn\u00e1: 1 { \"title\" : \"\" , \"url\" : \"\" , \"icon\" : \"\" , \"subheader\" : \"\" , \"divider\" : \"\" , \"roles\" : \"\" } Note Definicia jedneho odkazu, nemus\u00ed obsahova\u0165 v\u0161etky parametre. Ak sa jedn\u00e1 o klasick\u00fd odkaz tak v tom pr\u00edpade title, url s\u00fa povinn\u00e9. Roles je definovan\u00e9 ak pole, ktor\u00e9 obsahuje textov\u00e9 retazce s n\u00e1zvami rol\u00fd, ktor\u00e9 maj\u00fa pr\u00edstup k polo\u017eke. Ak u\u017e\u00edvatel nie je aspo\u0148 v jednej z defonova\u00fdch rol\u00fd nie je dan\u00fd odkaz zobrazen\u00fd. Ak nie s\u00fa definovan\u00e9 \u017eadne role, t\u00e1to polo\u017eka je pr\u00edstupn\u00e1 pre ka\u017ed\u00e9ho aj neprihl\u00e1sen\u00e9ho u\u017eivate\u013ea. UML diagram tried z balika sk.fri.uniza.views \u00b6","title":"Rozlo\u017eenie str\u00e1nky"},{"location":"page_layout/#pagelayout","text":"Str\u00e1nky s\u00fa vytv\u00e1ran\u00e9 pomocou abstraktnej triedy MaterializePage, ktor\u00e1 m\u00e1 za \u00falohu vyvori\u0165 html skelet, ktor\u00fd je definovan\u00fd v \u0161abl\u00f3ne materialize_page.ftl . HTML skelet na\u010d\u00edtava potrebn\u00e9 css a js kni\u017enice a je tvoren\u00fd troma \u010das\u0165ami: hlavi\u010dka / Header hlavn\u00fd obsah / Body p\u00e4ta / Footer V demo aplik\u00e1cii je hlavi\u010dka tvoren\u00e1 java triedou MaterializeHeader , ktor\u00e1 vytv\u00e1ra \u0161abl\u00f3nu materialize_header.ftl . V hlavi\u010dke je aj definovan\u00e9 bo\u010dn\u00e9 menu, ktor\u00e9ho jednotliv\u00e9 polo\u017eky s\u00fa definovan\u00e9 v \u0161abl\u00f3ne menu_items.ftl . \u0160trukt\u00fara jedn\u00e9ho odkazu je nasledovn\u00e1: 1 { \"title\" : \"\" , \"url\" : \"\" , \"icon\" : \"\" , \"subheader\" : \"\" , \"divider\" : \"\" , \"roles\" : \"\" } Note Definicia jedneho odkazu, nemus\u00ed obsahova\u0165 v\u0161etky parametre. Ak sa jedn\u00e1 o klasick\u00fd odkaz tak v tom pr\u00edpade title, url s\u00fa povinn\u00e9. Roles je definovan\u00e9 ak pole, ktor\u00e9 obsahuje textov\u00e9 retazce s n\u00e1zvami rol\u00fd, ktor\u00e9 maj\u00fa pr\u00edstup k polo\u017eke. Ak u\u017e\u00edvatel nie je aspo\u0148 v jednej z defonova\u00fdch rol\u00fd nie je dan\u00fd odkaz zobrazen\u00fd. Ak nie s\u00fa definovan\u00e9 \u017eadne role, t\u00e1to polo\u017eka je pr\u00edstupn\u00e1 pre ka\u017ed\u00e9ho aj neprihl\u00e1sen\u00e9ho u\u017eivate\u013ea.","title":"PageLayout"},{"location":"page_layout/#uml-diagram-tried-z-balika-skfriunizaviews","text":"","title":"UML diagram tried z balika sk.fri.uniza.views"},{"location":"projekt/","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 . \u251c\u2500\u2500 config.yml #Hlavn\u00fd konfigura\u010dn\u00fd s\u00fabor \u251c\u2500\u2500 keyStoreFileName.jks #Ulo\u017een\u00fd SSL certifik\u00e1t \u251c\u2500\u2500 pom.xml #Maven zdrojov\u00fd s\u00fabor \u251c\u2500\u2500 src #Zdrojov\u00e9 s\u00fabory, ktor\u00e9 s\u00fa pop\u00edsan\u00e9 ni\u017e\u0161ie \u2502 \u251c\u2500\u2500 main \u2502 \u2502 \u251c\u2500\u2500 java \u2502 \u2502 \u2502 ... \u2502 \u2502 \u2514\u2500\u2500 resources \u2502 \u2502 \u2502 ... \u2502 \u2514\u2500\u2500 test \u2502 \u251c\u2500\u2500 java \u2502 \u2514\u2500\u2500 resources \u2514\u2500\u2500 target #Generovan\u00e9 s\u00fabory \u0160trukt\u00fara zdrojov\u00fdch s\u00faborov \u00b6 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 \u251c\u2500\u2500 java \u2502 \u2514\u2500\u2500 sk.fri.uniza \u2502 \u251c\u2500\u2500 api #Reprezent\u00e1cia komunik\u00e1\u010dn\u00fdch objektov REST rozhrania. \u2502 \u2502 \u251c\u2500\u2500 AccessToken.java \u2502 \u2502 \u251c\u2500\u2500 LoginApi.java \u2502 \u2502 \u251c\u2500\u2500 LoginData.java \u2502 \u2502 \u251c\u2500\u2500 OauthRequest.java \u2502 \u2502 \u251c\u2500\u2500 OauthTokenRequest.java \u2502 \u2502 \u251c\u2500\u2500 Paged.java #Kontajner pre str\u00e1nkovan\u00e9 d\u00e1ta \u2502 \u2502 \u251c\u2500\u2500 Person.java \u2502 \u2502 \u251c\u2500\u2500 Phone.java \u2502 \u2502 \u251c\u2500\u2500 PublicKey.java \u2502 \u2502 \u2514\u2500\u2500 Saying.java \u2502 \u251c\u2500\u2500 auth #Autentifik\u00e1cia a autoriz\u00e1cia \u2502 \u2502 \u251c\u2500\u2500 OAuth2Authenticator.java \u2502 \u2502 \u251c\u2500\u2500 OAuth2Authorizer.java \u2502 \u2502 \u251c\u2500\u2500 OAuth2ClientBuilder.java \u2502 \u2502 \u251c\u2500\u2500 OAuth2Client.java \u2502 \u2502 \u251c\u2500\u2500 OAuth2Clients.java \u2502 \u2502 \u2514\u2500\u2500 Role.java \u2502 \u251c\u2500\u2500 cli \u2502 \u251c\u2500\u2500 client \u2502 \u251c\u2500\u2500 config #POJO objekty mapuj\u00face config.yml \u2502 \u2502 \u251c\u2500\u2500 OAuth2Configuration.java \u2502 \u2502 \u2514\u2500\u2500 WindFarmDemoConfiguration.java \u2502 \u251c\u2500\u2500 core #Triedy, ktor\u00e9 nie s\u00fa pou\u017e\u00edvan\u00e9 v API, oby\u010dajn\u00e9 POJO objekty \u2502 \u2502 \u251c\u2500\u2500 PersonBuilder.java \u2502 \u2502 \u251c\u2500\u2500 UserBuilder.java \u2502 \u2502 \u2514\u2500\u2500 User.java \u2502 \u251c\u2500\u2500 db #Triedy tvoriace pr\u00edstup k datab\u00e1ze \u2502 \u2502 \u251c\u2500\u2500 BasicDao.java #Z\u00e1kladn\u00e9 rozhranie definuj\u00face CRUD oper\u00e1cie s DB \u2502 \u2502 \u251c\u2500\u2500 PersonDao.java \u2502 \u2502 \u2514\u2500\u2500 UsersDao.java \u2502 \u251c\u2500\u2500 health \u2502 \u2502 \u2514\u2500\u2500 TemplateHealthCheck.java \u2502 \u251c\u2500\u2500 resources \u2502 \u2502 \u251c\u2500\u2500 HelloWorldResource.java \u2502 \u2502 \u251c\u2500\u2500 LoginResource.java \u2502 \u2502 \u251c\u2500\u2500 PersonResource.java \u2502 \u2502 \u2514\u2500\u2500 UsersResource.java \u2502 \u251c\u2500\u2500 views #Triedy, ktor\u00e9 vytv\u00e1raj\u00fa webov\u00e9 str\u00e1nky \u2502 \u2502 \u251c\u2500\u2500 ErrorView.java \u2502 \u2502 \u251c\u2500\u2500 LoginPageViewBuilder.java \u2502 \u2502 \u2514\u2500\u2500 LoginPageView.java \u2502 \u2514\u2500\u2500 WindFarmDemoApplication.java \u2514\u2500\u2500 resources \u251c\u2500\u2500 assets #S\u00fabory, ktor\u00e9 s\u00fa vyu\u017e\u00edvan\u00e9 pri generovan\u00fd web str\u00e1nok. \u2502 \u251c\u2500\u2500 css \u2502 \u2502 \u251c\u2500\u2500 materialize.css #Hlavn\u00fd CSS s\u00fabor pou\u017e\u00edvan\u00fd kni\u017enicou MATERIALIZECSS \u2502 \u2502 \u251c\u2500\u2500 materialize.min.css \u2502 \u2502 \u2514\u2500\u2500 style.css #Vl\u00e1stn\u00e9 \u00fapravy CSS \u2502 \u251c\u2500\u2500 img \u2502 \u2502 \u251c\u2500\u2500 favicon.png \u2502 \u2502 \u251c\u2500\u2500 img_avatar.png \u2502 \u2502 \u251c\u2500\u2500 logo.png \u2502 \u2502 \u251c\u2500\u2500 logo_small.png \u2502 \u2502 \u251c\u2500\u2500 sample-1.jpg \u2502 \u2502 \u251c\u2500\u2500 windmill_sunset2.png \u2502 \u2502 \u251c\u2500\u2500 windmill_sunset.png \u2502 \u2502 \u2514\u2500\u2500 yuna.jpg \u2502 \u251c\u2500\u2500 index.htm \u2502 \u2514\u2500\u2500 js \u2502 \u251c\u2500\u2500 init.js #V tomto s\u00fabore sa vykon\u00e1va inicializ\u00e1cia pou\u017eit\u00fdch javascriptov\u00fdch komponentov MATERIALIZECSS. \u2502 \u251c\u2500\u2500 materialize.js \u2502 \u2514\u2500\u2500 materialize.min.js #Hlavn\u00fd javascript s\u00fabor pou\u017e\u00edvan\u00fd kni\u017enicou MATERIALIZECSS \u251c\u2500\u2500 banner.txt \u251c\u2500\u2500 hibernate.cfg.xml #Hibernate konfigura\u010dn\u00fd s\u00fabor. V pr\u00edpade dropwiz\u00e1rdu sa vyu\u017e\u00edva iba v r\u00e1mci IDE prostredia pre \"Persistance plugin\". V\u0161etky realne nastavenia sa musia upravova\u0165 v config.yml \u2514\u2500\u2500 sk.fri.uniza \u2514\u2500\u2500 views #\u0160ablon\u00fd html str\u00e1nok, Umiestnenie v prie\u010dinku mus\u00ed zodpoveda\u0165 n\u00e1zvu balik\u00e1 v JAVE \u251c\u2500\u2500 error_page.ftl \u2514\u2500\u2500 loginPage.ftl ER diagram \u00b6","title":"\u0160trukt\u00fara projektu"},{"location":"projekt/#struktura-zdrojovych-suborov","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 \u251c\u2500\u2500 java \u2502 \u2514\u2500\u2500 sk.fri.uniza \u2502 \u251c\u2500\u2500 api #Reprezent\u00e1cia komunik\u00e1\u010dn\u00fdch objektov REST rozhrania. \u2502 \u2502 \u251c\u2500\u2500 AccessToken.java \u2502 \u2502 \u251c\u2500\u2500 LoginApi.java \u2502 \u2502 \u251c\u2500\u2500 LoginData.java \u2502 \u2502 \u251c\u2500\u2500 OauthRequest.java \u2502 \u2502 \u251c\u2500\u2500 OauthTokenRequest.java \u2502 \u2502 \u251c\u2500\u2500 Paged.java #Kontajner pre str\u00e1nkovan\u00e9 d\u00e1ta \u2502 \u2502 \u251c\u2500\u2500 Person.java \u2502 \u2502 \u251c\u2500\u2500 Phone.java \u2502 \u2502 \u251c\u2500\u2500 PublicKey.java \u2502 \u2502 \u2514\u2500\u2500 Saying.java \u2502 \u251c\u2500\u2500 auth #Autentifik\u00e1cia a autoriz\u00e1cia \u2502 \u2502 \u251c\u2500\u2500 OAuth2Authenticator.java \u2502 \u2502 \u251c\u2500\u2500 OAuth2Authorizer.java \u2502 \u2502 \u251c\u2500\u2500 OAuth2ClientBuilder.java \u2502 \u2502 \u251c\u2500\u2500 OAuth2Client.java \u2502 \u2502 \u251c\u2500\u2500 OAuth2Clients.java \u2502 \u2502 \u2514\u2500\u2500 Role.java \u2502 \u251c\u2500\u2500 cli \u2502 \u251c\u2500\u2500 client \u2502 \u251c\u2500\u2500 config #POJO objekty mapuj\u00face config.yml \u2502 \u2502 \u251c\u2500\u2500 OAuth2Configuration.java \u2502 \u2502 \u2514\u2500\u2500 WindFarmDemoConfiguration.java \u2502 \u251c\u2500\u2500 core #Triedy, ktor\u00e9 nie s\u00fa pou\u017e\u00edvan\u00e9 v API, oby\u010dajn\u00e9 POJO objekty \u2502 \u2502 \u251c\u2500\u2500 PersonBuilder.java \u2502 \u2502 \u251c\u2500\u2500 UserBuilder.java \u2502 \u2502 \u2514\u2500\u2500 User.java \u2502 \u251c\u2500\u2500 db #Triedy tvoriace pr\u00edstup k datab\u00e1ze \u2502 \u2502 \u251c\u2500\u2500 BasicDao.java #Z\u00e1kladn\u00e9 rozhranie definuj\u00face CRUD oper\u00e1cie s DB \u2502 \u2502 \u251c\u2500\u2500 PersonDao.java \u2502 \u2502 \u2514\u2500\u2500 UsersDao.java \u2502 \u251c\u2500\u2500 health \u2502 \u2502 \u2514\u2500\u2500 TemplateHealthCheck.java \u2502 \u251c\u2500\u2500 resources \u2502 \u2502 \u251c\u2500\u2500 HelloWorldResource.java \u2502 \u2502 \u251c\u2500\u2500 LoginResource.java \u2502 \u2502 \u251c\u2500\u2500 PersonResource.java \u2502 \u2502 \u2514\u2500\u2500 UsersResource.java \u2502 \u251c\u2500\u2500 views #Triedy, ktor\u00e9 vytv\u00e1raj\u00fa webov\u00e9 str\u00e1nky \u2502 \u2502 \u251c\u2500\u2500 ErrorView.java \u2502 \u2502 \u251c\u2500\u2500 LoginPageViewBuilder.java \u2502 \u2502 \u2514\u2500\u2500 LoginPageView.java \u2502 \u2514\u2500\u2500 WindFarmDemoApplication.java \u2514\u2500\u2500 resources \u251c\u2500\u2500 assets #S\u00fabory, ktor\u00e9 s\u00fa vyu\u017e\u00edvan\u00e9 pri generovan\u00fd web str\u00e1nok. \u2502 \u251c\u2500\u2500 css \u2502 \u2502 \u251c\u2500\u2500 materialize.css #Hlavn\u00fd CSS s\u00fabor pou\u017e\u00edvan\u00fd kni\u017enicou MATERIALIZECSS \u2502 \u2502 \u251c\u2500\u2500 materialize.min.css \u2502 \u2502 \u2514\u2500\u2500 style.css #Vl\u00e1stn\u00e9 \u00fapravy CSS \u2502 \u251c\u2500\u2500 img \u2502 \u2502 \u251c\u2500\u2500 favicon.png \u2502 \u2502 \u251c\u2500\u2500 img_avatar.png \u2502 \u2502 \u251c\u2500\u2500 logo.png \u2502 \u2502 \u251c\u2500\u2500 logo_small.png \u2502 \u2502 \u251c\u2500\u2500 sample-1.jpg \u2502 \u2502 \u251c\u2500\u2500 windmill_sunset2.png \u2502 \u2502 \u251c\u2500\u2500 windmill_sunset.png \u2502 \u2502 \u2514\u2500\u2500 yuna.jpg \u2502 \u251c\u2500\u2500 index.htm \u2502 \u2514\u2500\u2500 js \u2502 \u251c\u2500\u2500 init.js #V tomto s\u00fabore sa vykon\u00e1va inicializ\u00e1cia pou\u017eit\u00fdch javascriptov\u00fdch komponentov MATERIALIZECSS. \u2502 \u251c\u2500\u2500 materialize.js \u2502 \u2514\u2500\u2500 materialize.min.js #Hlavn\u00fd javascript s\u00fabor pou\u017e\u00edvan\u00fd kni\u017enicou MATERIALIZECSS \u251c\u2500\u2500 banner.txt \u251c\u2500\u2500 hibernate.cfg.xml #Hibernate konfigura\u010dn\u00fd s\u00fabor. V pr\u00edpade dropwiz\u00e1rdu sa vyu\u017e\u00edva iba v r\u00e1mci IDE prostredia pre \"Persistance plugin\". V\u0161etky realne nastavenia sa musia upravova\u0165 v config.yml \u2514\u2500\u2500 sk.fri.uniza \u2514\u2500\u2500 views #\u0160ablon\u00fd html str\u00e1nok, Umiestnenie v prie\u010dinku mus\u00ed zodpoveda\u0165 n\u00e1zvu balik\u00e1 v JAVE \u251c\u2500\u2500 error_page.ftl \u2514\u2500\u2500 loginPage.ftl","title":"\u0160trukt\u00fara zdrojov\u00fdch s\u00faborov"},{"location":"projekt/#er-diagram","text":"","title":"ER diagram"},{"location":"swagger_api/","text":"WindFarmDemo microservices \u00b6 Swagger dokument\u00e1cia je dostupna po spusten\u00ed servera na adrese: http://localhost:8085/api/swagger Overview \u00b6 URI scheme \u00b6 BasePath : /api Schemes : HTTP, HTTPS Tags \u00b6 OAuth2 and Login Person resource Resources \u00b6 OAuth2 And Login \u00b6 Display Login page \u00b6 1 GET /api/login Parameters \u00b6 Type Name Description Schema Query client_id required The id of the application that asks for authorization string Query redirect_uri required Holds a URL. A successful response from this endpoint results in a redirect to this URL. string Query response_type required Informs the Authorization Server of the desired authorization processing flow enum (code, token) Query scope required A space-delimited list of permissions that the application requires. string Query state required The primary reason for using the state parameter is to mitigate CSRF attacks. An opaque value, used for security purposes. If this request parameter is set in the request, then it is returned to the application as part of the redirect_uri. string Responses \u00b6 HTTP Code Description Schema 200 successful operation LoginPageView Produces \u00b6 text/html Example HTTP request \u00b6 Request path \u00b6 1 /api/login?client_id=string&redirect_uri=string&response_type=string&scope=string&state=string Example HTTP response \u00b6 Response 200 \u00b6 1 2 3 4 5 { \"rootPath\" : \"string\" , \"sessionId\" : \"string\" , \"action\" : \"string\" } Request to obtain code \u00b6 1 POST /api/login/code Parameters \u00b6 Type Name Schema FormData action required object FormData password required string FormData sessionId required string FormData stay_signin required boolean FormData username required string Responses \u00b6 HTTP Code Description Schema default successful operation No Content Consumes \u00b6 application/x-www-form-urlencoded Produces \u00b6 application/x-www-form-urlencoded Example HTTP request \u00b6 Request path \u00b6 1 /api/login/code Request formData \u00b6 1 \"string\" Request to obtain access token. Implicit flow \u00b6 1 POST /api/login/implicit Parameters \u00b6 Type Name Schema FormData action required object FormData password required string FormData sessionId required string FormData stay_signin required boolean FormData username required string Responses \u00b6 HTTP Code Description Schema default successful operation No Content Consumes \u00b6 application/x-www-form-urlencoded Produces \u00b6 application/json Example HTTP request \u00b6 Request path \u00b6 1 /api/login/implicit Request formData \u00b6 1 \"string\" Request to obtain public key \u00b6 1 GET /api/login/public-key Description \u00b6 An obtained public key can by used to verify JWT token Responses \u00b6 HTTP Code Description Schema 200 successful operation PublicKey Produces \u00b6 application/json Example HTTP request \u00b6 Request path \u00b6 1 /api/login/public-key Example HTTP response \u00b6 Response 200 \u00b6 1 2 3 4 5 { \"pubKey\" : \"string\" , \"keyFormat\" : \"string\" , \"keyAlg\" : \"string\" } Request to obtain access token from code. Authorization Code \u00b6 1 POST /api/login/token Parameters \u00b6 Type Name Schema FormData client_id required string FormData client_secret required string FormData code required string FormData grant_type required string FormData redirect_uri required string FormData state required string Responses \u00b6 HTTP Code Description Schema default successful operation No Content Consumes \u00b6 application/x-www-form-urlencoded Produces \u00b6 application/json Example HTTP request \u00b6 Request path \u00b6 1 /api/login/token Request formData \u00b6 1 \"string\" Person Resource \u00b6 Save or update person \u00b6 1 POST /api/persons Parameters \u00b6 Type Name Description Schema Header Authorization optional Bearer token string Body parameter \u00b6 Name : body Flags : optional Type : Person Responses \u00b6 HTTP Code Description Schema 200 successful operation Person Produces \u00b6 application/json Security \u00b6 Type Name Scopes oauth2 oauth2 ADMIN,USER_READ_ONLY Example HTTP request \u00b6 Request path \u00b6 1 /api/persons Request header \u00b6 1 \"string\" Request body \u00b6 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 { \"id\" : 0 , \"userName\" : \"string\" , \"roles\" : [ \"string\" ], \"email\" : \"string\" , \"phoneNumbers\" : [ { \"owner\" : { \"id\" : 0 , \"userName\" : \"string\" , \"roles\" : [ \"string\" ], \"email\" : \"string\" , \"phoneNumbers\" : [ { \"owner\" : \"...\" , \"number\" : \"string\" , \"id\" : 0 } ], \"firstName\" : \"string\" , \"lastName\" : \"string\" }, \"number\" : \"string\" , \"id\" : 0 } ], \"firstName\" : \"string\" , \"lastName\" : \"string\" } Example HTTP response \u00b6 Response 200 \u00b6 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 { \"id\" : 0 , \"userName\" : \"string\" , \"roles\" : [ \"string\" ], \"email\" : \"string\" , \"phoneNumbers\" : [ { \"owner\" : { \"id\" : 0 , \"userName\" : \"string\" , \"roles\" : [ \"string\" ], \"email\" : \"string\" , \"phoneNumbers\" : [ { \"owner\" : \"...\" , \"number\" : \"string\" , \"id\" : 0 } ], \"firstName\" : \"string\" , \"lastName\" : \"string\" }, \"number\" : \"string\" , \"id\" : 0 } ], \"firstName\" : \"string\" , \"lastName\" : \"string\" } Obtain list of users \u00b6 1 GET /api/persons Parameters \u00b6 Type Name Description Schema Header Authorization optional Bearer token string Query limit optional integer (int32) Query page optional integer (int32) Responses \u00b6 HTTP Code Description Schema 200 successful operation < Person > array Consumes \u00b6 application/json Produces \u00b6 application/json Security \u00b6 Type Name Scopes oauth2 oauth2 ADMIN Example HTTP request \u00b6 Request path \u00b6 1 /api/persons Request header \u00b6 1 \"string\" Example HTTP response \u00b6 Response 200 \u00b6 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 [ { \"id\" : 0 , \"userName\" : \"string\" , \"roles\" : [ \"string\" ], \"email\" : \"string\" , \"phoneNumbers\" : [ { \"owner\" : { \"id\" : 0 , \"userName\" : \"string\" , \"roles\" : [ \"string\" ], \"email\" : \"string\" , \"phoneNumbers\" : [ { \"owner\" : \"...\" , \"number\" : \"string\" , \"id\" : 0 } ], \"firstName\" : \"string\" , \"lastName\" : \"string\" }, \"number\" : \"string\" , \"id\" : 0 } ], \"firstName\" : \"string\" , \"lastName\" : \"string\" } ] Delete person \u00b6 1 DELETE /api/persons Parameters \u00b6 Type Name Description Schema Header Authorization optional Bearer token string Query id optional integer (int64) Responses \u00b6 HTTP Code Description Schema 200 successful operation Person Security \u00b6 Type Name Scopes oauth2 oauth2 ADMIN Example HTTP request \u00b6 Request path \u00b6 1 /api/persons Request header \u00b6 1 \"string\" Example HTTP response \u00b6 Response 200 \u00b6 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 { \"id\" : 0 , \"userName\" : \"string\" , \"roles\" : [ \"string\" ], \"email\" : \"string\" , \"phoneNumbers\" : [ { \"owner\" : { \"id\" : 0 , \"userName\" : \"string\" , \"roles\" : [ \"string\" ], \"email\" : \"string\" , \"phoneNumbers\" : [ { \"owner\" : \"...\" , \"number\" : \"string\" , \"id\" : 0 } ], \"firstName\" : \"string\" , \"lastName\" : \"string\" }, \"number\" : \"string\" , \"id\" : 0 } ], \"firstName\" : \"string\" , \"lastName\" : \"string\" } Set new password \u00b6 1 POST /api/persons/password Parameters \u00b6 Type Name Description Schema Header Authorization optional Bearer token string Query id optional integer (int64) FormData password optional string Responses \u00b6 HTTP Code Description Schema default successful operation No Content Consumes \u00b6 application/x-www-form-urlencoded Produces \u00b6 application/json Security \u00b6 Type Name Scopes oauth2 oauth2 ADMIN Example HTTP request \u00b6 Request path \u00b6 1 /api/persons/password Request header \u00b6 1 \"string\" Request formData \u00b6 1 \"string\" Find person by ID \u00b6 1 GET /api/persons/{id} Parameters \u00b6 Type Name Description Schema Header Authorization optional Bearer token string Path id required integer (int64) Responses \u00b6 HTTP Code Description Schema 200 successful operation Person Produces \u00b6 application/json Security \u00b6 Type Name Scopes oauth2 oauth2 ADMIN,USER_READ_ONLY Example HTTP request \u00b6 Request path \u00b6 1 /api/persons/0 Request header \u00b6 1 \"string\" Example HTTP response \u00b6 Response 200 \u00b6 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 { \"id\" : 0 , \"userName\" : \"string\" , \"roles\" : [ \"string\" ], \"email\" : \"string\" , \"phoneNumbers\" : [ { \"owner\" : { \"id\" : 0 , \"userName\" : \"string\" , \"roles\" : [ \"string\" ], \"email\" : \"string\" , \"phoneNumbers\" : [ { \"owner\" : \"...\" , \"number\" : \"string\" , \"id\" : 0 } ], \"firstName\" : \"string\" , \"lastName\" : \"string\" }, \"number\" : \"string\" , \"id\" : 0 } ], \"firstName\" : \"string\" , \"lastName\" : \"string\" } Definitions \u00b6 LoginPageView \u00b6 Name Description Schema action optional Example : \"string\" string rootPath optional Example : \"string\" string sessionId optional Example : \"string\" string Person \u00b6 Name Description Schema email optional Example : \"string\" string firstName optional Example : \"string\" string id optional Example : 0 integer (int64) lastName optional Example : \"string\" string phoneNumbers optional Example : [ \"[phone](#phone)\" ] < Phone > array roles optional Example : [ \"string\" ] < string > array userName optional Example : \"string\" string Phone \u00b6 Name Description Schema id optional Example : 0 integer (int64) number optional Example : \"string\" string owner optional Example : \"[person](#person)\" Person PublicKey \u00b6 Name Description Schema keyAlg optional Example : \"string\" string keyFormat optional Example : \"string\" string pubKey optional Example : \"string\" string Security \u00b6 oauth2 \u00b6 oauth2 Type : oauth2 Flow : accessCode Token URL : http://localhost:8085/api/login Token URL : http://localhost:8085/api/login/token Name Description ADMIN Access to all resources USER_READ_ONLY Limited access","title":"REST api"},{"location":"swagger_api/#windfarmdemo-microservices","text":"Swagger dokument\u00e1cia je dostupna po spusten\u00ed servera na adrese: http://localhost:8085/api/swagger","title":"WindFarmDemo microservices"},{"location":"swagger_api/#overview","text":"","title":"Overview"},{"location":"swagger_api/#uri-scheme","text":"BasePath : /api Schemes : HTTP, HTTPS","title":"URI scheme"},{"location":"swagger_api/#tags","text":"OAuth2 and Login Person resource","title":"Tags"},{"location":"swagger_api/#resources","text":"","title":"Resources"},{"location":"swagger_api/#oauth2-and-login","text":"","title":"OAuth2 And Login"},{"location":"swagger_api/#display-login-page","text":"1 GET /api/login","title":"Display Login page"},{"location":"swagger_api/#parameters","text":"Type Name Description Schema Query client_id required The id of the application that asks for authorization string Query redirect_uri required Holds a URL. A successful response from this endpoint results in a redirect to this URL. string Query response_type required Informs the Authorization Server of the desired authorization processing flow enum (code, token) Query scope required A space-delimited list of permissions that the application requires. string Query state required The primary reason for using the state parameter is to mitigate CSRF attacks. An opaque value, used for security purposes. If this request parameter is set in the request, then it is returned to the application as part of the redirect_uri. string","title":"Parameters"},{"location":"swagger_api/#responses","text":"HTTP Code Description Schema 200 successful operation LoginPageView","title":"Responses"},{"location":"swagger_api/#produces","text":"text/html","title":"Produces"},{"location":"swagger_api/#example-http-request","text":"","title":"Example HTTP request"},{"location":"swagger_api/#request-path","text":"1 /api/login?client_id=string&redirect_uri=string&response_type=string&scope=string&state=string","title":"Request path"},{"location":"swagger_api/#example-http-response","text":"","title":"Example HTTP response"},{"location":"swagger_api/#response-200","text":"1 2 3 4 5 { \"rootPath\" : \"string\" , \"sessionId\" : \"string\" , \"action\" : \"string\" }","title":"Response 200"},{"location":"swagger_api/#request-to-obtain-code","text":"1 POST /api/login/code","title":"Request to obtain code"},{"location":"swagger_api/#parameters_1","text":"Type Name Schema FormData action required object FormData password required string FormData sessionId required string FormData stay_signin required boolean FormData username required string","title":"Parameters"},{"location":"swagger_api/#responses_1","text":"HTTP Code Description Schema default successful operation No Content","title":"Responses"},{"location":"swagger_api/#consumes","text":"application/x-www-form-urlencoded","title":"Consumes"},{"location":"swagger_api/#produces_1","text":"application/x-www-form-urlencoded","title":"Produces"},{"location":"swagger_api/#example-http-request_1","text":"","title":"Example HTTP request"},{"location":"swagger_api/#request-path_1","text":"1 /api/login/code","title":"Request path"},{"location":"swagger_api/#request-formdata","text":"1 \"string\"","title":"Request formData"},{"location":"swagger_api/#request-to-obtain-access-token-implicit-flow","text":"1 POST /api/login/implicit","title":"Request to obtain access token. Implicit flow"},{"location":"swagger_api/#parameters_2","text":"Type Name Schema FormData action required object FormData password required string FormData sessionId required string FormData stay_signin required boolean FormData username required string","title":"Parameters"},{"location":"swagger_api/#responses_2","text":"HTTP Code Description Schema default successful operation No Content","title":"Responses"},{"location":"swagger_api/#consumes_1","text":"application/x-www-form-urlencoded","title":"Consumes"},{"location":"swagger_api/#produces_2","text":"application/json","title":"Produces"},{"location":"swagger_api/#example-http-request_2","text":"","title":"Example HTTP request"},{"location":"swagger_api/#request-path_2","text":"1 /api/login/implicit","title":"Request path"},{"location":"swagger_api/#request-formdata_1","text":"1 \"string\"","title":"Request formData"},{"location":"swagger_api/#request-to-obtain-public-key","text":"1 GET /api/login/public-key","title":"Request to obtain public key"},{"location":"swagger_api/#description","text":"An obtained public key can by used to verify JWT token","title":"Description"},{"location":"swagger_api/#responses_3","text":"HTTP Code Description Schema 200 successful operation PublicKey","title":"Responses"},{"location":"swagger_api/#produces_3","text":"application/json","title":"Produces"},{"location":"swagger_api/#example-http-request_3","text":"","title":"Example HTTP request"},{"location":"swagger_api/#request-path_3","text":"1 /api/login/public-key","title":"Request path"},{"location":"swagger_api/#example-http-response_1","text":"","title":"Example HTTP response"},{"location":"swagger_api/#response-200_1","text":"1 2 3 4 5 { \"pubKey\" : \"string\" , \"keyFormat\" : \"string\" , \"keyAlg\" : \"string\" }","title":"Response 200"},{"location":"swagger_api/#request-to-obtain-access-token-from-code-authorization-code","text":"1 POST /api/login/token","title":"Request to obtain access token from code. Authorization Code"},{"location":"swagger_api/#parameters_3","text":"Type Name Schema FormData client_id required string FormData client_secret required string FormData code required string FormData grant_type required string FormData redirect_uri required string FormData state required string","title":"Parameters"},{"location":"swagger_api/#responses_4","text":"HTTP Code Description Schema default successful operation No Content","title":"Responses"},{"location":"swagger_api/#consumes_2","text":"application/x-www-form-urlencoded","title":"Consumes"},{"location":"swagger_api/#produces_4","text":"application/json","title":"Produces"},{"location":"swagger_api/#example-http-request_4","text":"","title":"Example HTTP request"},{"location":"swagger_api/#request-path_4","text":"1 /api/login/token","title":"Request path"},{"location":"swagger_api/#request-formdata_2","text":"1 \"string\"","title":"Request formData"},{"location":"swagger_api/#person-resource","text":"","title":"Person Resource"},{"location":"swagger_api/#save-or-update-person","text":"1 POST /api/persons","title":"Save or update person"},{"location":"swagger_api/#parameters_4","text":"Type Name Description Schema Header Authorization optional Bearer token string","title":"Parameters"},{"location":"swagger_api/#body-parameter","text":"Name : body Flags : optional Type : Person","title":"Body parameter"},{"location":"swagger_api/#responses_5","text":"HTTP Code Description Schema 200 successful operation Person","title":"Responses"},{"location":"swagger_api/#produces_5","text":"application/json","title":"Produces"},{"location":"swagger_api/#security","text":"Type Name Scopes oauth2 oauth2 ADMIN,USER_READ_ONLY","title":"Security"},{"location":"swagger_api/#example-http-request_5","text":"","title":"Example HTTP request"},{"location":"swagger_api/#request-path_5","text":"1 /api/persons","title":"Request path"},{"location":"swagger_api/#request-header","text":"1 \"string\"","title":"Request header"},{"location":"swagger_api/#request-body","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 { \"id\" : 0 , \"userName\" : \"string\" , \"roles\" : [ \"string\" ], \"email\" : \"string\" , \"phoneNumbers\" : [ { \"owner\" : { \"id\" : 0 , \"userName\" : \"string\" , \"roles\" : [ \"string\" ], \"email\" : \"string\" , \"phoneNumbers\" : [ { \"owner\" : \"...\" , \"number\" : \"string\" , \"id\" : 0 } ], \"firstName\" : \"string\" , \"lastName\" : \"string\" }, \"number\" : \"string\" , \"id\" : 0 } ], \"firstName\" : \"string\" , \"lastName\" : \"string\" }","title":"Request body"},{"location":"swagger_api/#example-http-response_2","text":"","title":"Example HTTP response"},{"location":"swagger_api/#response-200_2","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 { \"id\" : 0 , \"userName\" : \"string\" , \"roles\" : [ \"string\" ], \"email\" : \"string\" , \"phoneNumbers\" : [ { \"owner\" : { \"id\" : 0 , \"userName\" : \"string\" , \"roles\" : [ \"string\" ], \"email\" : \"string\" , \"phoneNumbers\" : [ { \"owner\" : \"...\" , \"number\" : \"string\" , \"id\" : 0 } ], \"firstName\" : \"string\" , \"lastName\" : \"string\" }, \"number\" : \"string\" , \"id\" : 0 } ], \"firstName\" : \"string\" , \"lastName\" : \"string\" }","title":"Response 200"},{"location":"swagger_api/#obtain-list-of-users","text":"1 GET /api/persons","title":"Obtain list of users"},{"location":"swagger_api/#parameters_5","text":"Type Name Description Schema Header Authorization optional Bearer token string Query limit optional integer (int32) Query page optional integer (int32)","title":"Parameters"},{"location":"swagger_api/#responses_6","text":"HTTP Code Description Schema 200 successful operation < Person > array","title":"Responses"},{"location":"swagger_api/#consumes_3","text":"application/json","title":"Consumes"},{"location":"swagger_api/#produces_6","text":"application/json","title":"Produces"},{"location":"swagger_api/#security_1","text":"Type Name Scopes oauth2 oauth2 ADMIN","title":"Security"},{"location":"swagger_api/#example-http-request_6","text":"","title":"Example HTTP request"},{"location":"swagger_api/#request-path_6","text":"1 /api/persons","title":"Request path"},{"location":"swagger_api/#request-header_1","text":"1 \"string\"","title":"Request header"},{"location":"swagger_api/#example-http-response_3","text":"","title":"Example HTTP response"},{"location":"swagger_api/#response-200_3","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 [ { \"id\" : 0 , \"userName\" : \"string\" , \"roles\" : [ \"string\" ], \"email\" : \"string\" , \"phoneNumbers\" : [ { \"owner\" : { \"id\" : 0 , \"userName\" : \"string\" , \"roles\" : [ \"string\" ], \"email\" : \"string\" , \"phoneNumbers\" : [ { \"owner\" : \"...\" , \"number\" : \"string\" , \"id\" : 0 } ], \"firstName\" : \"string\" , \"lastName\" : \"string\" }, \"number\" : \"string\" , \"id\" : 0 } ], \"firstName\" : \"string\" , \"lastName\" : \"string\" } ]","title":"Response 200"},{"location":"swagger_api/#delete-person","text":"1 DELETE /api/persons","title":"Delete person"},{"location":"swagger_api/#parameters_6","text":"Type Name Description Schema Header Authorization optional Bearer token string Query id optional integer (int64)","title":"Parameters"},{"location":"swagger_api/#responses_7","text":"HTTP Code Description Schema 200 successful operation Person","title":"Responses"},{"location":"swagger_api/#security_2","text":"Type Name Scopes oauth2 oauth2 ADMIN","title":"Security"},{"location":"swagger_api/#example-http-request_7","text":"","title":"Example HTTP request"},{"location":"swagger_api/#request-path_7","text":"1 /api/persons","title":"Request path"},{"location":"swagger_api/#request-header_2","text":"1 \"string\"","title":"Request header"},{"location":"swagger_api/#example-http-response_4","text":"","title":"Example HTTP response"},{"location":"swagger_api/#response-200_4","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 { \"id\" : 0 , \"userName\" : \"string\" , \"roles\" : [ \"string\" ], \"email\" : \"string\" , \"phoneNumbers\" : [ { \"owner\" : { \"id\" : 0 , \"userName\" : \"string\" , \"roles\" : [ \"string\" ], \"email\" : \"string\" , \"phoneNumbers\" : [ { \"owner\" : \"...\" , \"number\" : \"string\" , \"id\" : 0 } ], \"firstName\" : \"string\" , \"lastName\" : \"string\" }, \"number\" : \"string\" , \"id\" : 0 } ], \"firstName\" : \"string\" , \"lastName\" : \"string\" }","title":"Response 200"},{"location":"swagger_api/#set-new-password","text":"1 POST /api/persons/password","title":"Set new password"},{"location":"swagger_api/#parameters_7","text":"Type Name Description Schema Header Authorization optional Bearer token string Query id optional integer (int64) FormData password optional string","title":"Parameters"},{"location":"swagger_api/#responses_8","text":"HTTP Code Description Schema default successful operation No Content","title":"Responses"},{"location":"swagger_api/#consumes_4","text":"application/x-www-form-urlencoded","title":"Consumes"},{"location":"swagger_api/#produces_7","text":"application/json","title":"Produces"},{"location":"swagger_api/#security_3","text":"Type Name Scopes oauth2 oauth2 ADMIN","title":"Security"},{"location":"swagger_api/#example-http-request_8","text":"","title":"Example HTTP request"},{"location":"swagger_api/#request-path_8","text":"1 /api/persons/password","title":"Request path"},{"location":"swagger_api/#request-header_3","text":"1 \"string\"","title":"Request header"},{"location":"swagger_api/#request-formdata_3","text":"1 \"string\"","title":"Request formData"},{"location":"swagger_api/#find-person-by-id","text":"1 GET /api/persons/{id}","title":"Find person by ID"},{"location":"swagger_api/#parameters_8","text":"Type Name Description Schema Header Authorization optional Bearer token string Path id required integer (int64)","title":"Parameters"},{"location":"swagger_api/#responses_9","text":"HTTP Code Description Schema 200 successful operation Person","title":"Responses"},{"location":"swagger_api/#produces_8","text":"application/json","title":"Produces"},{"location":"swagger_api/#security_4","text":"Type Name Scopes oauth2 oauth2 ADMIN,USER_READ_ONLY","title":"Security"},{"location":"swagger_api/#example-http-request_9","text":"","title":"Example HTTP request"},{"location":"swagger_api/#request-path_9","text":"1 /api/persons/0","title":"Request path"},{"location":"swagger_api/#request-header_4","text":"1 \"string\"","title":"Request header"},{"location":"swagger_api/#example-http-response_5","text":"","title":"Example HTTP response"},{"location":"swagger_api/#response-200_5","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 { \"id\" : 0 , \"userName\" : \"string\" , \"roles\" : [ \"string\" ], \"email\" : \"string\" , \"phoneNumbers\" : [ { \"owner\" : { \"id\" : 0 , \"userName\" : \"string\" , \"roles\" : [ \"string\" ], \"email\" : \"string\" , \"phoneNumbers\" : [ { \"owner\" : \"...\" , \"number\" : \"string\" , \"id\" : 0 } ], \"firstName\" : \"string\" , \"lastName\" : \"string\" }, \"number\" : \"string\" , \"id\" : 0 } ], \"firstName\" : \"string\" , \"lastName\" : \"string\" }","title":"Response 200"},{"location":"swagger_api/#definitions","text":"","title":"Definitions"},{"location":"swagger_api/#loginpageview","text":"Name Description Schema action optional Example : \"string\" string rootPath optional Example : \"string\" string sessionId optional Example : \"string\" string","title":"LoginPageView"},{"location":"swagger_api/#person","text":"Name Description Schema email optional Example : \"string\" string firstName optional Example : \"string\" string id optional Example : 0 integer (int64) lastName optional Example : \"string\" string phoneNumbers optional Example : [ \"[phone](#phone)\" ] < Phone > array roles optional Example : [ \"string\" ] < string > array userName optional Example : \"string\" string","title":"Person"},{"location":"swagger_api/#phone","text":"Name Description Schema id optional Example : 0 integer (int64) number optional Example : \"string\" string owner optional Example : \"[person](#person)\" Person","title":"Phone"},{"location":"swagger_api/#publickey","text":"Name Description Schema keyAlg optional Example : \"string\" string keyFormat optional Example : \"string\" string pubKey optional Example : \"string\" string","title":"PublicKey"},{"location":"swagger_api/#security_5","text":"","title":"Security"},{"location":"swagger_api/#oauth2","text":"oauth2 Type : oauth2 Flow : accessCode Token URL : http://localhost:8085/api/login Token URL : http://localhost:8085/api/login/token Name Description ADMIN Access to all resources USER_READ_ONLY Limited access","title":"oauth2"},{"location":"web_projekt/","text":"\u0160trukt\u00fara zdrojov\u00fdch s\u00faborov \u00b6 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 . \u251c\u2500\u2500 java \u2502 \u2514\u2500\u2500 sk.fri.uniza \u2502 \u251c\u2500\u2500 api #Reprezent\u00e1cia komunik\u00e1\u010dn\u00fdch objektov REST rozhrania. \u2502 \u2502 \u251c\u2500\u2500 AccessToken.java \u2502 \u2502 \u251c\u2500\u2500 LoginApi.java \u2502 \u2502 \u251c\u2500\u2500 OauthRequestBuilder.java \u2502 \u2502 \u251c\u2500\u2500 OauthRequest.java \u2502 \u2502 \u251c\u2500\u2500 Paged.java #Kontajner pre str\u00e1nkovan\u00e9 d\u00e1ta \u2502 \u2502 \u251c\u2500\u2500 PersonBuilder.java \u2502 \u2502 \u251c\u2500\u2500 Person.java \u2502 \u2502 \u251c\u2500\u2500 Phone.java \u2502 \u2502 \u251c\u2500\u2500 PublicKey.java \u2502 \u2502 \u2514\u2500\u2500 Saying.java \u2502 \u251c\u2500\u2500 auth #Autentifik\u00e1cia a autoriz\u00e1cia \u2502 \u2502 \u251c\u2500\u2500 CustomAuthenticator.java \u2502 \u2502 \u251c\u2500\u2500 CustomAuthFilter.java \u2502 \u2502 \u251c\u2500\u2500 CustomSecurityContext.java \u2502 \u2502 \u251c\u2500\u2500 OAuth2Authenticator.java \u2502 \u2502 \u251c\u2500\u2500 OAuth2Authorizer.java \u2502 \u2502 \u251c\u2500\u2500 Role.java \u2502 \u2502 \u251c\u2500\u2500 Session.java #Objekt rel\u00e1cie, ktor\u00e1 je reprezentuje jedno spojenie klienta s web serverom. Tento objekt je serializovan\u00ed a ulo\u017een\u00fd v Cookies prehliada\u010da. \u2502 \u2502 \u2514\u2500\u2500 Sessions.java #In-memory databaza v\u0161etk\u00fdch rel\u00e1cii, ktor\u00e9 server nadviazal. Po re\u0161tarte web servera s\u00fa v\u0161etky rel\u00e1zie zabudnut\u00e9, \u010do sp\u00f4sob\u00ed odhl\u00e1senie v\u0161etk\u00fdch prihl\u00e1sen\u00fdch u\u017e\u00edvate\u013eov. V realnom prostred\u00ed treba tieto rel\u00e1cie uklada\u0165. \u2502 \u251c\u2500\u2500 cli \u2502 \u251c\u2500\u2500 client \u2502 \u2502 \u2514\u2500\u2500 WindFarmRequest.java #Retrofit klient, ktor\u00fd sa prip\u00e1ja na Windfarm servis \u2502 \u251c\u2500\u2500 configuration #POJO objekty mapuj\u00face config.yml \u2502 \u2502 \u251c\u2500\u2500 ServiceConnector.java \u2502 \u2502 \u251c\u2500\u2500 ServiceDbAuth.java \u2502 \u2502 \u2514\u2500\u2500 WindFarmDemoConfiguration.java \u2502 \u251c\u2500\u2500 core #Triedy, ktor\u00e9 nie s\u00fa pou\u017e\u00edvan\u00e9 v API, oby\u010dajn\u00e9 POJO objekty \u2502 \u2502 \u251c\u2500\u2500 UserBuilder.java \u2502 \u2502 \u2514\u2500\u2500 User.java \u2502 \u251c\u2500\u2500 db \u2502 \u2502 \u2514\u2500\u2500 BasicDao.java \u2502 \u251c\u2500\u2500 health \u2502 \u2502 \u2514\u2500\u2500 TemplateHealthCheck.java \u2502 \u251c\u2500\u2500 resources \u2502 \u2502 \u251c\u2500\u2500 HelloWorldResource.java \u2502 \u2502 \u251c\u2500\u2500 LoginResource.java \u2502 \u2502 \u2514\u2500\u2500 PersonsResource.java \u2502 \u251c\u2500\u2500 views #Triedy, ktor\u00e9 vytv\u00e1raj\u00fa webov\u00e9 str\u00e1nky \u2502 \u2502 \u251c\u2500\u2500 ErrorView.java #Zobrazenie chybovaj hl\u00e1\u0161ky \u2502 \u2502 \u251c\u2500\u2500 GraphView.java #Zobrazenie grafou \u2502 \u2502 \u251c\u2500\u2500 LoginView.java #Zobrazenie \u00favodnej str\u00e1nky s mo\u017enostou prihl\u00e1senia do syst\u00e9mu \u2502 \u2502 \u251c\u2500\u2500 MaterializeFooter.java #P\u00e4ta str\u00e1nky \u2502 \u2502 \u251c\u2500\u2500 MaterializeHeader.java #Implemnt\u00e1cia hlavi\u010dky str\u00e1nky. Obsahuje aj Menu \u2502 \u2502 \u251c\u2500\u2500 MaterializePage.java #Vytv\u00e1ra kostru html str\u00e1nky. Abstrakn\u00e1 trieda, ktor\u00fa dedia ostatn\u00e9 str\u00e1nky, kotr\u00e9 u\u017e vytv\u00e1raj\u00fa konkr\u00e9tny obsah. \u2502 \u2502 \u251c\u2500\u2500 NewPersonView.java #Nov\u00e1 osoba \u2502 \u2502 \u251c\u2500\u2500 PagePart.java #Rozhranie, ktor\u00e9 definuje pr\u00edstup k \u0161ablone, ktor\u00e1 tvor\u00ed str\u00e1nku \u2502 \u2502 \u251c\u2500\u2500 PersonsView.java #Zoznam u\u017e\u00edvate\u013eov \u2502 \u2502 \u251c\u2500\u2500 PersonView.java #Info o u\u017e\u00edvate\u013eovi \u2502 \u2502 \u2514\u2500\u2500 ValidationErrorView.java #Zobrazenie poru\u0161en\u00ed valida\u010dn\u00fdch anot\u00e1ci\u00ed. \u2502 \u2514\u2500\u2500 WindFarmDemoApplication.java #Hlavn\u00e1 aplik\u00e1cia \u2514\u2500\u2500 resources \u251c\u2500\u2500 assets \u2502 \u251c\u2500\u2500 css \u2502 \u2502 \u251c\u2500\u2500 materialize.css #Hlavn\u00fd CSS s\u00fabor pou\u017e\u00edvan\u00fd kni\u017enicou \u2502 \u2502 \u251c\u2500\u2500 materialize.min.css \u2502 \u2502 \u2514\u2500\u2500 style.css #Vlastn\u00e9 \u00fapravy css mimo materialize.css \u2502 \u251c\u2500\u2500 img \u2502 \u2502 \u251c\u2500\u2500 favicon.png \u2502 \u2502 \u251c\u2500\u2500 img_avatar.png \u2502 \u2502 \u251c\u2500\u2500 logo_50px.png \u2502 \u2502 \u251c\u2500\u2500 logo.png \u2502 \u2502 \u251c\u2500\u2500 logo_small.png \u2502 \u2502 \u251c\u2500\u2500 sample-1.jpg \u2502 \u2502 \u251c\u2500\u2500 windmill_small_.jpg \u2502 \u2502 \u251c\u2500\u2500 windmill_sunset2.png \u2502 \u2502 \u251c\u2500\u2500 windmill_sunset.png \u2502 \u2502 \u251c\u2500\u2500 windmill_sunset_small.png \u2502 \u2502 \u251c\u2500\u2500 windmill.xcf \u2502 \u2502 \u2514\u2500\u2500 yuna.jpg \u2502 \u2514\u2500\u2500 js \u2502 \u251c\u2500\u2500 Chart.min.js #Javascript kni\u017enica na pr\u00e1cu s grafmy. \u2502 \u251c\u2500\u2500 init.js #Ak javascript komponenty z kni\u017enice materializecss potrebuj\u00fa inicializova\u0165, tak je to mo\u017ene zap\u00edsa\u0165 do tohoto s\u00faboru \u2502 \u251c\u2500\u2500 jquery-3.4.0.min.js #Pomocn\u00e1 kni\u017enica na efekt\u00edvnej\u0161\u00ed JS. \u2502 \u251c\u2500\u2500 materialize.js #Javascriptov\u00e9 komponenty materializecss kni\u017enice \u2502 \u2514\u2500\u2500 materialize.min.js \u251c\u2500\u2500 banner.txt \u2514\u2500\u2500 sk.fri.uniza \u2514\u2500\u2500 views #Freemarker \u0161abl\u00f3ny, ktor\u00e9 spolu s ich java komplement\u00e1rnymi triedami vytv\u00e1raj\u00fa html str\u00e1nky \u251c\u2500\u2500 done_login.ftl \u251c\u2500\u2500 error_page.ftl \u251c\u2500\u2500 graphs.ftl \u251c\u2500\u2500 login.ftl \u251c\u2500\u2500 materialize_footer.ftl \u251c\u2500\u2500 materialize_header.ftl \u251c\u2500\u2500 materialize_page.ftl \u251c\u2500\u2500 menu_items.ftl #Definovan\u00e9 polo\u017eky hlavn\u00e9ho menu \u251c\u2500\u2500 new_person.ftl \u251c\u2500\u2500 person.ftl \u251c\u2500\u2500 persons_table.ftl \u2514\u2500\u2500 validation_error_page.ftl","title":"\u0160trukt\u00fara projektu"},{"location":"web_projekt/#struktura-zdrojovych-suborov","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 . \u251c\u2500\u2500 java \u2502 \u2514\u2500\u2500 sk.fri.uniza \u2502 \u251c\u2500\u2500 api #Reprezent\u00e1cia komunik\u00e1\u010dn\u00fdch objektov REST rozhrania. \u2502 \u2502 \u251c\u2500\u2500 AccessToken.java \u2502 \u2502 \u251c\u2500\u2500 LoginApi.java \u2502 \u2502 \u251c\u2500\u2500 OauthRequestBuilder.java \u2502 \u2502 \u251c\u2500\u2500 OauthRequest.java \u2502 \u2502 \u251c\u2500\u2500 Paged.java #Kontajner pre str\u00e1nkovan\u00e9 d\u00e1ta \u2502 \u2502 \u251c\u2500\u2500 PersonBuilder.java \u2502 \u2502 \u251c\u2500\u2500 Person.java \u2502 \u2502 \u251c\u2500\u2500 Phone.java \u2502 \u2502 \u251c\u2500\u2500 PublicKey.java \u2502 \u2502 \u2514\u2500\u2500 Saying.java \u2502 \u251c\u2500\u2500 auth #Autentifik\u00e1cia a autoriz\u00e1cia \u2502 \u2502 \u251c\u2500\u2500 CustomAuthenticator.java \u2502 \u2502 \u251c\u2500\u2500 CustomAuthFilter.java \u2502 \u2502 \u251c\u2500\u2500 CustomSecurityContext.java \u2502 \u2502 \u251c\u2500\u2500 OAuth2Authenticator.java \u2502 \u2502 \u251c\u2500\u2500 OAuth2Authorizer.java \u2502 \u2502 \u251c\u2500\u2500 Role.java \u2502 \u2502 \u251c\u2500\u2500 Session.java #Objekt rel\u00e1cie, ktor\u00e1 je reprezentuje jedno spojenie klienta s web serverom. Tento objekt je serializovan\u00ed a ulo\u017een\u00fd v Cookies prehliada\u010da. \u2502 \u2502 \u2514\u2500\u2500 Sessions.java #In-memory databaza v\u0161etk\u00fdch rel\u00e1cii, ktor\u00e9 server nadviazal. Po re\u0161tarte web servera s\u00fa v\u0161etky rel\u00e1zie zabudnut\u00e9, \u010do sp\u00f4sob\u00ed odhl\u00e1senie v\u0161etk\u00fdch prihl\u00e1sen\u00fdch u\u017e\u00edvate\u013eov. V realnom prostred\u00ed treba tieto rel\u00e1cie uklada\u0165. \u2502 \u251c\u2500\u2500 cli \u2502 \u251c\u2500\u2500 client \u2502 \u2502 \u2514\u2500\u2500 WindFarmRequest.java #Retrofit klient, ktor\u00fd sa prip\u00e1ja na Windfarm servis \u2502 \u251c\u2500\u2500 configuration #POJO objekty mapuj\u00face config.yml \u2502 \u2502 \u251c\u2500\u2500 ServiceConnector.java \u2502 \u2502 \u251c\u2500\u2500 ServiceDbAuth.java \u2502 \u2502 \u2514\u2500\u2500 WindFarmDemoConfiguration.java \u2502 \u251c\u2500\u2500 core #Triedy, ktor\u00e9 nie s\u00fa pou\u017e\u00edvan\u00e9 v API, oby\u010dajn\u00e9 POJO objekty \u2502 \u2502 \u251c\u2500\u2500 UserBuilder.java \u2502 \u2502 \u2514\u2500\u2500 User.java \u2502 \u251c\u2500\u2500 db \u2502 \u2502 \u2514\u2500\u2500 BasicDao.java \u2502 \u251c\u2500\u2500 health \u2502 \u2502 \u2514\u2500\u2500 TemplateHealthCheck.java \u2502 \u251c\u2500\u2500 resources \u2502 \u2502 \u251c\u2500\u2500 HelloWorldResource.java \u2502 \u2502 \u251c\u2500\u2500 LoginResource.java \u2502 \u2502 \u2514\u2500\u2500 PersonsResource.java \u2502 \u251c\u2500\u2500 views #Triedy, ktor\u00e9 vytv\u00e1raj\u00fa webov\u00e9 str\u00e1nky \u2502 \u2502 \u251c\u2500\u2500 ErrorView.java #Zobrazenie chybovaj hl\u00e1\u0161ky \u2502 \u2502 \u251c\u2500\u2500 GraphView.java #Zobrazenie grafou \u2502 \u2502 \u251c\u2500\u2500 LoginView.java #Zobrazenie \u00favodnej str\u00e1nky s mo\u017enostou prihl\u00e1senia do syst\u00e9mu \u2502 \u2502 \u251c\u2500\u2500 MaterializeFooter.java #P\u00e4ta str\u00e1nky \u2502 \u2502 \u251c\u2500\u2500 MaterializeHeader.java #Implemnt\u00e1cia hlavi\u010dky str\u00e1nky. Obsahuje aj Menu \u2502 \u2502 \u251c\u2500\u2500 MaterializePage.java #Vytv\u00e1ra kostru html str\u00e1nky. Abstrakn\u00e1 trieda, ktor\u00fa dedia ostatn\u00e9 str\u00e1nky, kotr\u00e9 u\u017e vytv\u00e1raj\u00fa konkr\u00e9tny obsah. \u2502 \u2502 \u251c\u2500\u2500 NewPersonView.java #Nov\u00e1 osoba \u2502 \u2502 \u251c\u2500\u2500 PagePart.java #Rozhranie, ktor\u00e9 definuje pr\u00edstup k \u0161ablone, ktor\u00e1 tvor\u00ed str\u00e1nku \u2502 \u2502 \u251c\u2500\u2500 PersonsView.java #Zoznam u\u017e\u00edvate\u013eov \u2502 \u2502 \u251c\u2500\u2500 PersonView.java #Info o u\u017e\u00edvate\u013eovi \u2502 \u2502 \u2514\u2500\u2500 ValidationErrorView.java #Zobrazenie poru\u0161en\u00ed valida\u010dn\u00fdch anot\u00e1ci\u00ed. \u2502 \u2514\u2500\u2500 WindFarmDemoApplication.java #Hlavn\u00e1 aplik\u00e1cia \u2514\u2500\u2500 resources \u251c\u2500\u2500 assets \u2502 \u251c\u2500\u2500 css \u2502 \u2502 \u251c\u2500\u2500 materialize.css #Hlavn\u00fd CSS s\u00fabor pou\u017e\u00edvan\u00fd kni\u017enicou \u2502 \u2502 \u251c\u2500\u2500 materialize.min.css \u2502 \u2502 \u2514\u2500\u2500 style.css #Vlastn\u00e9 \u00fapravy css mimo materialize.css \u2502 \u251c\u2500\u2500 img \u2502 \u2502 \u251c\u2500\u2500 favicon.png \u2502 \u2502 \u251c\u2500\u2500 img_avatar.png \u2502 \u2502 \u251c\u2500\u2500 logo_50px.png \u2502 \u2502 \u251c\u2500\u2500 logo.png \u2502 \u2502 \u251c\u2500\u2500 logo_small.png \u2502 \u2502 \u251c\u2500\u2500 sample-1.jpg \u2502 \u2502 \u251c\u2500\u2500 windmill_small_.jpg \u2502 \u2502 \u251c\u2500\u2500 windmill_sunset2.png \u2502 \u2502 \u251c\u2500\u2500 windmill_sunset.png \u2502 \u2502 \u251c\u2500\u2500 windmill_sunset_small.png \u2502 \u2502 \u251c\u2500\u2500 windmill.xcf \u2502 \u2502 \u2514\u2500\u2500 yuna.jpg \u2502 \u2514\u2500\u2500 js \u2502 \u251c\u2500\u2500 Chart.min.js #Javascript kni\u017enica na pr\u00e1cu s grafmy. \u2502 \u251c\u2500\u2500 init.js #Ak javascript komponenty z kni\u017enice materializecss potrebuj\u00fa inicializova\u0165, tak je to mo\u017ene zap\u00edsa\u0165 do tohoto s\u00faboru \u2502 \u251c\u2500\u2500 jquery-3.4.0.min.js #Pomocn\u00e1 kni\u017enica na efekt\u00edvnej\u0161\u00ed JS. \u2502 \u251c\u2500\u2500 materialize.js #Javascriptov\u00e9 komponenty materializecss kni\u017enice \u2502 \u2514\u2500\u2500 materialize.min.js \u251c\u2500\u2500 banner.txt \u2514\u2500\u2500 sk.fri.uniza \u2514\u2500\u2500 views #Freemarker \u0161abl\u00f3ny, ktor\u00e9 spolu s ich java komplement\u00e1rnymi triedami vytv\u00e1raj\u00fa html str\u00e1nky \u251c\u2500\u2500 done_login.ftl \u251c\u2500\u2500 error_page.ftl \u251c\u2500\u2500 graphs.ftl \u251c\u2500\u2500 login.ftl \u251c\u2500\u2500 materialize_footer.ftl \u251c\u2500\u2500 materialize_header.ftl \u251c\u2500\u2500 materialize_page.ftl \u251c\u2500\u2500 menu_items.ftl #Definovan\u00e9 polo\u017eky hlavn\u00e9ho menu \u251c\u2500\u2500 new_person.ftl \u251c\u2500\u2500 person.ftl \u251c\u2500\u2500 persons_table.ftl \u2514\u2500\u2500 validation_error_page.ftl","title":"\u0160trukt\u00fara zdrojov\u00fdch s\u00faborov"}]}